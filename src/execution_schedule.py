# -*- coding: utf-8 -*-
"""execution_schedule.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1r52ASNGWLjMWu6xB1Wa5RGeN59Fo_2PN
"""

import numpy as np

def static_schedule(alpha: np.ndarray, γ: float, S: float):
    """
    Closed-form static schedule:
      x_i = S * α_i^{-1/(γ-1)} / sum_j α_j^{-1/(γ-1)}
    """
    w = alpha ** (-1/(γ-1))
    w /= w.sum()
    return S * w

def rolling_schedule(alpha_forecast: np.ndarray, γ: float, S: float):
    """
    At each time i, re-compute weights over remaining horizon.
    Returns list of x_i.
    """
    N = len(alpha_forecast)
    S_rem = S
    xs = []
    for i in range(N):
        rem_alphas = alpha_forecast[i:]
        w = rem_alphas ** (-1/(γ-1))
        w /= w.sum()
        x_i = S_rem * w[0]
        xs.append(x_i)
        S_rem -= x_i
    return np.array(xs)